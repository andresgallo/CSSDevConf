###################################################################
# Sass plugin module for capturing and exporting specific
# "tagged" styles generated by SASS to be written to individual
# export files. Generated css output from sass is not altered.
#
# @author   Eddy Nunez <enunez@marvel.com>
# @version  $Id: exporter.rb 17923 2013-06-08 02:39:33Z nunez $

require 'sass'
require 'lib/config'

module Sass
    module TagExporter

        def self.tag_filter(css, opts)

            styles    = Hash.new { |hash, key| hash[key] = [] }
            file_args = [ CSSPATH, File.basename(opts[:css_filename],'.css') ]

            Sass::TagExporter::TAGS.each {
                |tag_id, tag|
                re = Regexp.new('\n?[\w\s]*\.' + tag + '.*?\}\n?', Regexp::MULTILINE)
                css.scan(re) {
                    |match| styles[tag_id] << match.sub(/\n\s+/, "\n")
                }

                # Write to export file
                unless styles[tag_id].empty? then
                    file_args[2] = tag_id
                    export_file = sprintf "%s/%s.%s.css", *file_args
                    printf ">>> Exporting %d %s styles: %s\n", styles[tag_id].count, tag_id, export_file
                    File.open( export_file, 'w') {
                        |f| f.write( styles[tag_id].join )
                    }
                end
            }

            css
        end
    end
end

Sass::Engine.class_eval do
    def render_with_tagexport
        Sass::TagExporter.tag_filter(render_without_exporting, options)
    end
    alias_method :render_without_exporting, :render
    alias_method :render, :render_with_tagexport
    alias_method :to_css, :render_with_tagexport
end
